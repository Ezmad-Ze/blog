// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  name     String?
  bio      String?
  role     Int    @default(100)

  blogs    Blog[]

  comments Comment[]

  ratings  BlogRating[]

  likes    Like[]
  // following Follow[] @relation("UserFollows")
  // followers Follow[] @relation("UserFollowed")
}

// model Follow {
  // id          Int @id @default(autoincrement())
  // followerId  Int
  // followingId Int

  // follower    User @relation("UserFollows", fields: [followerId], references: [id])
  // following   User @relation("UserFollowed", fields: [followingId], references: [id])

  // @@unique([followerId, followingId])
// }

model Blog {
  id       Int          @id @default(autoincrement())
  title    String
  content  String

  userId   Int
  user     User         @relation(fields: [userId], references: [id])
  comments Comment[]
  ratings  BlogRating[]
  likes    Like[]
}

model BlogRating {
  id          Int   @id @default(autoincrement())
  ratingValue Int

  userId Int
  user   User   @relation(fields: [userId], references: [id])

  blogId Int
  blog   Blog   @relation(fields: [blogId], references: [id])
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  blogId Int
  blog   Blog @relation(fields: [blogId], references: [id])
}

model Like {
  id Int @id @default(autoincrement())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  blogId Int
  blog   Blog @relation(fields: [blogId], references: [id])
}

